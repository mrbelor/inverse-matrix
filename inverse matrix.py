# -*- coding: utf8 -*- 
# –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É 9 –Ω–∞ 9 –∫ –¥–∞–Ω–Ω–æ–π –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ
print("–≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é –¥–∞–Ω–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—É 9 –Ω–∞ 9 –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ\n    ‚é°üûéüûéüûé‚é¶\nA = ‚é°üûéüûéüûé‚é§\n    ‚é£üûéüûéüûé‚é¶")
run = True
while run:
    A = input("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã –ø–æ –∫–Ω–∏–∂–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É —á–µ—Ä–µ–∑ —Ç–æ—á–∫–∏,–∑–∞–ø—è—Ç—ã–µ –∏–ª–∏ –ø—Ä–æ–±–µ–ª—ã (9 —à—Ç—É–∫)\n–ù–∞–ø—Ä–∏–º–µ—Ä: -1 -7 10 -1 8 8 9 1 1\n")
    A = A.replace(",", " ")
    A = A.replace(".", " ")
    A = A.split()

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ 1
    if len(A) != 9:
        print("\n–í—ã –≤–≤–µ–ª–∏ –æ—à–∏–±–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤!")
        continue
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ 2
    StrA = ""
    for i in A:
        StrA += i
    StrA = StrA.replace("-", "")
    if not StrA.isdigit():
        print("\n–í —Å–ø–∏—Å–∫–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!")
        continue
    
    # --------–≠–¢–ê–ü1--------
    print("\n1)–ü–æ—Å—á–∏—Ç–∞–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å")
    opred_A = (int(A[0])*int(A[4])*int(A[8])+int(A[1])*int(A[5])*int(A[6])+int(A[3])*int(A[2])*int(A[7])-int(A[6])*int(A[4])*int(A[2])-int(A[1])*int(A[3])*int(A[8])-int(A[0])*int(A[5])*int(A[7]))

    # —Å–¥–µ–ª–∞–µ–º —á—Ç–æ–±—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤ —Å–∫–æ–±–æ—á–∫–∏ –∑–∞–∫–ª—é—á–∞–ª–∏—Å—å
    output_A = []
    for i in A:
        if int(i) < 0:
            output_A.append("("+i+")")
        else:
            output_A.append(i)
    # –≤—ã–≤–æ–¥ —Ä–µ—à–µ–Ω–∏—è
    print("{}*{}*{} + {}*{}*{} + {}*{}*{} - {}*{}*{} - {}*{}*{} - {}*{}*{} = {}\n".format(output_A[0], output_A[4], output_A[8], output_A[1], output_A[5], output_A[6], output_A[3], output_A[2], output_A[7], output_A[6], output_A[4], output_A[2], output_A[1], output_A[3], output_A[8], output_A[0], output_A[5], output_A[7], opred_A))

    # --------–≠–¢–ê–ü2--------
    print("2)–†–∞–≤–µ–Ω –ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å 0?")
    if opred_A != 0:
        print(opred_A, "‚â† 0  –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –≤—Å—ë —Ö–æ—Ä–æ—à–æ\n")
    else:
        input("–î–∞, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å —Ç–≤–æ–µ–π –º–∞—Ç—Ä–∏—Ü—ã —Ä–∞–≤–µ–Ω 0.\n–í—Ä–æ–¥–µ –∫–∞–∫ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –æ–±—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç..\n–ù–∞ —ç—Ç–æ–º –º–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è –≤—Å—ë.")
        quit()
    # --------–≠–¢–ê–ü3--------
    print("3)–°—á–∏—Ç–∞–µ–º D —Å—Ç—Ä–æ–∫–∏\n")
    output = []
    for i in A:
        if int(i) < 0:
            output.append(i)
        else:
            output.append(" "+i)
    
    D11 = (int(A[4])*int(A[7])-int(A[5])*int(A[8]))*(-1)**2
    D12 = (int(A[3])*int(A[8])-int(A[5])*int(A[6]))*(-1)**3
    D13 = (int(A[3])*int(A[7])-int(A[4])*int(A[6]))*(-1)**4

    D21 = (int(A[1])*int(A[8])-int(A[2])*int(A[7]))*(-1)**3
    D22 = (int(A[0])*int(A[8])-int(A[2])*int(A[6]))*(-1)**4
    D23 = (int(A[0])*int(A[7])-int(A[1])*int(A[6]))*(-1)**5

    D31 = (int(A[1])*int(A[5])-int(A[2])*int(A[4]))*(-1)**4
    D32 = (int(A[0])*int(A[5])-int(A[2])*int(A[3]))*(-1)**5
    D33 = (int(A[0])*int(A[4])-int(A[1])*int(A[3]))*(-1)**6

    print("D‚ÇÅ‚ÇÅ=(-1)¬≤({} {}) = {}\n         ({} {})".format(output[4], output[5], D11, output[7], output[8]))
    print("D‚ÇÅ‚ÇÇ=(-1)¬≥({} {}) = {}\n         ({} {})".format(output[3], output[5], D12, output[6], output[8]))
    print("D‚ÇÅ‚ÇÉ=(-1)‚Å¥({} {}) = {}\n         ({} {})\n".format(output[3], output[4], D13, output[6], output[7]))
    
    print("D‚ÇÇ‚ÇÅ=(-1)¬≥({} {}) = {}\n         ({} {})".format(output[1], output[2], D21, output[7], output[8]))
    print("D‚ÇÇ‚ÇÇ=(-1)‚Å¥({} {}) = {}\n         ({} {})".format(output[0], output[2], D22, output[6], output[8]))
    print("D‚ÇÇ‚ÇÉ=(-1)‚Åµ({} {}) = {}\n         ({} {})\n".format(output[0], output[1], D23, output[6], output[7]))

    print("D‚ÇÉ‚ÇÅ=(-1)‚Å¥({} {}) = {}\n         ({} {})".format(output[1], output[2], D31, output[4], output[5]))
    print("D‚ÇÉ‚ÇÇ=(-1)‚Åµ({} {}) = {}\n         ({} {})".format(output[0], output[2], D32, output[3], output[5]))
    print("D‚ÇÉ‚ÇÉ=(-1)‚Å∂({} {}) = {}\n         ({} {})\n".format(output[0], output[1], D33, output[3], output[4]))
   
    # --------–≠–¢–ê–ü4--------
    print("4)–í—Å—Ç–∞–≤–ª—è–µ–º D —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Ç—Ä–∏—Ü—É\n")
    Dmat = []
    Dmat.append(D11)
    Dmat.append(D12)
    Dmat.append(D13)
    Dmat.append(D21)
    Dmat.append(D22)
    Dmat.append(D23)
    Dmat.append(D31)
    Dmat.append(D32)
    Dmat.append(D33)

    output = []
    for i in Dmat:
        if len(str(i)) == 1:
            output.append("   "+str(i))
        elif len(str(i)) == 2:
            output.append("  "+str(i))
        elif len(str(i)) == 3:
            output.append(" "+str(i))
        else:
            output.append(str(i))    
    
    print("({} {} {})\n|{} {} {}|\n({} {} {})\n".format(output[0], output[1], output[2], output[3], output[4], output[5], output[6], output[7], output[8]))
    # --------–≠–¢–ê–ü5--------
    print("5)–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É")
    At = []
    At.append(Dmat[0])
    At.append(Dmat[3])
    At.append(Dmat[6])
    At.append(Dmat[1])
    At.append(Dmat[4])
    At.append(Dmat[7])
    At.append(Dmat[2])
    At.append(Dmat[5])
    At.append(Dmat[8])

    output = []
    for i in At:
        if len(str(i)) == 1:
            output.append("   "+str(i))
        elif len(str(i)) == 2:
            output.append("  "+str(i))
        elif len(str(i)) == 3:
            output.append(" "+str(i))
        else:
            output.append(str(i))    
    
    print("     ({} {} {})\nA·µó = ({} {} {})\n     ({} {} {})\n".format(output[0], output[1], output[2], output[3], output[4], output[5], output[6], output[7], output[8]))
    # --------–≠–¢–ê–ü6--------
    print("6)–ù–∞—Ö–æ–¥–∏–º –æ–±—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É")
    print("A‚Åª¬π = 1/|A|")
    print(" "*(9+len(str(opred_A)))+"({} {} {})\n".format(output[0], output[1], output[2])+"A‚Åª¬π = 1/{}*|{} {} {}|\n".format(opred_A,output[3], output[4], output[5])+" "*(9+len(str(opred_A)))+"({} {} {})\n".format(output[6], output[7], output[8]))
    print("     ({}/{} {}/{} {}/{})\nA·µó = ({}/{} {}/{} {}/{})\n     ({}/{} {}/{} {}/{})\n".format(output[0], opred_A, output[1], opred_A, output[2], opred_A, output[3], opred_A, output[4], opred_A, output[5], opred_A, output[6], opred_A, output[7], opred_A, output[8], opred_A))
    print("–û—Ç–≤–µ—Ç ‚Üë\n")
    print("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –º–∞—Ç—Ä–∏—Ü—É –≤—ã—à–µ –ø—Ä–æ–≥–Ω–∞—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º—É \"Photomath\" –∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –µ—ë\n")
    # ------–≠–¢–ê–ü1(–ü—Ä–æ–≤–µ—Ä–∫–∞)--------
    print("1)–ü–†–û–í–ï–†–ö–ê")
    print("A*A‚Åª¬π = E")
    # —Å–¥–µ–ª–∞–µ–º —á—Ç–æ–±—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤ —Å–∫–æ–±–æ—á–∫–∏ –∑–∞–∫–ª—é—á–∞–ª–∏—Å—å
    output = []
    for i in At:
        if int(i) < 0:
            output.append("("+str(i)+")")
        else:
            output.append(str(i))
    print("–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ - —ç–ª–µ–º–µ–Ω—Ç –µ–¥–µ–Ω–∏—á–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã")
 
    print("{}*{}+{}*{}+{}*{} / {}".format(output[0], output_A[0], output[3], output_A[1], output[6], output_A[2], opred_A))
    print("{}*{}+{}*{}+{}*{} / {}".format(output[1], output_A[0], output[4], output_A[1], output[7], output_A[2], opred_A))
    print("{}*{}+{}*{}+{}*{} / {}\n".format(output[2], output_A[0], output[5], output_A[1], output[8], output_A[2], opred_A))

    print("{}*{}+{}*{}+{}*{} / {}".format(output[0], output_A[3], output[3], output_A[4], output[6], output_A[5], opred_A))
    print("{}*{}+{}*{}+{}*{} / {}".format(output[1], output_A[3], output[4], output_A[4], output[7], output_A[5], opred_A))
    print("{}*{}+{}*{}+{}*{} / {}\n".format(output[2], output_A[3], output[5], output_A[4], output[8], output_A[5], opred_A))

    print("{}*{}+{}*{}+{}*{} / {}".format(output[0], output_A[6], output[3], output_A[7], output[6], output_A[8], opred_A))
    print("{}*{}+{}*{}+{}*{} / {}".format(output[1], output_A[6], output[4], output_A[7], output[7], output_A[8], opred_A))
    print("{}*{}+{}*{}+{}*{} / {}\n".format(output[2], output_A[6], output[5], output_A[7], output[8], output_A[8], opred_A))
    # ------–≠–¢–ê–ü2(–ü—Ä–æ–≤–µ—Ä–∫–∞)--------
    print("2)–ü–†–û–í–ï–†–ö–ê")
    print("–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ - —ç–ª–µ–º–µ–Ω—Ç –µ–¥–µ–Ω–∏—á–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã\n")

    print("{}+{}+{} / {}".format(int(At[0])*int(A[0]), int(At[3])*int(A[1]), int(At[6])*int(A[2]), opred_A))
    print("{}+{}+{} / {}".format(int(At[1])*int(A[0]), int(At[4])*int(A[1]), int(At[7])*int(A[2]), opred_A))
    print("{}+{}+{} / {}\n".format(int(At[2])*int(A[0]), int(At[5])*int(A[1]), int(At[8])*int(A[2]), opred_A))

    print("{}+{}+{} / {}".format(int(At[0])*int(A[3]), int(At[3])*int(A[4]), int(At[6])*int(A[5]), opred_A))
    print("{}+{}+{} / {}".format(int(At[1])*int(A[3]), int(At[4])*int(A[4]), int(At[7])*int(A[5]), opred_A))
    print("{}+{}+{} / {}\n".format(int(At[2])*int(A[3]), int(At[5])*int(A[4]), int(At[8])*int(A[5]), opred_A))

    print("{}+{}+{} / {}".format(int(At[0])*int(A[6]), int(At[3])*int(A[7]), int(At[6])*int(A[8]), opred_A))
    print("{}+{}+{} / {}".format(int(At[1])*int(A[6]), int(At[4])*int(A[7]), int(At[7])*int(A[8]), opred_A))
    print("{}+{}+{} / {}\n".format(int(At[2])*int(A[6]), int(At[5])*int(A[7]), int(At[8])*int(A[8]), opred_A))
    
    # ------–≠–¢–ê–ü3(–ü—Ä–æ–≤–µ—Ä–∫–∞)--------
    print("3)–ü–†–û–í–ï–†–ö–ê")    

    print("({}/{} {}/{} {}/{})".format(int(At[0])*int(A[0])+int(At[3])*int(A[1])+int(At[6])*int(A[2]), opred_A, int(At[1])*int(A[0])+int(At[4])*int(A[1])+int(At[7])*int(A[2]), opred_A, int(At[2])*int(A[0])+int(At[5])*int(A[1])+int(At[8])*int(A[2]), opred_A))
    print("({}/{} {}/{} {}/{})".format(int(At[0])*int(A[3])+int(At[3])*int(A[4])+int(At[6])*int(A[5]), opred_A, int(At[1])*int(A[3])+int(At[4])*int(A[4])+int(At[7])*int(A[5]), opred_A, int(At[2])*int(A[3])+int(At[5])*int(A[4])+int(At[8])*int(A[5]), opred_A))
    print("({}/{} {}/{} {}/{})\n".format(int(At[0])*int(A[6])+int(At[3])*int(A[7])+int(At[6])*int(A[8]), opred_A, int(At[1])*int(A[6])+int(At[4])*int(A[7])+int(At[7])*int(A[8]), opred_A, int(At[2])*int(A[6])+int(At[5])*int(A[7])+int(At[8])*int(A[8]), opred_A))

    # ------–≠–¢–ê–ü4(–ü—Ä–æ–≤–µ—Ä–∫–∞)--------
    print("4)–ü–†–û–í–ï–†–ö–ê")
    print("({} {} {})".format((int(At[0])*int(A[0])+int(At[3])*int(A[1])+int(At[6])*int(A[2]))/opred_A, (int(At[1])*int(A[0])+int(At[4])*int(A[1])+int(At[7])*int(A[2]))/opred_A, (int(At[2])*int(A[0])+int(At[5])*int(A[1])+int(At[8])*int(A[2]))/opred_A))
    print("({} {} {})".format((int(At[0])*int(A[3])+int(At[3])*int(A[4])+int(At[6])*int(A[5]))/opred_A, (int(At[1])*int(A[3])+int(At[4])*int(A[4])+int(At[7])*int(A[5]))/opred_A, (int(At[2])*int(A[3])+int(At[5])*int(A[4])+int(At[8])*int(A[5]))/opred_A))
    print("({} {} {})\n".format((int(At[0])*int(A[6])+int(At[3])*int(A[7])+int(At[6])*int(A[8]))/opred_A, (int(At[1])*int(A[6])+int(At[4])*int(A[7])+int(At[7])*int(A[8]))/opred_A, (int(At[2])*int(A[6])+int(At[5])*int(A[7])+int(At[8])*int(A[8]))/opred_A))


    print(" "*31+"(1 0 0)"+"\n"+"–ï—Å–ª–∏ —ç—Ç–∞ –º–∞—Ç—Ä–∏—Ü–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: (0 1 0)\n"+"—Ç–æ –≤—Å—ë —Ö–æ—Ä–æ—à–æ"+" "*18+"(0 0 1)\n")
    
input("–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É...")
